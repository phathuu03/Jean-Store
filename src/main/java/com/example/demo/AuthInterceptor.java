package com.example.demo;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import org.springframework.web.servlet.HandlerInterceptor;

import java.util.Arrays;
import java.util.List;

public class AuthInterceptor implements HandlerInterceptor {

    // C√°c ƒë∆∞·ªùng d·∫´n m√† Nh√¢n Vi√™n ƒë∆∞·ª£c truy c·∫≠p
    private static final List<String> EMPLOYEE_ALLOWED_PATHS = Arrays.asList(
            "/index",
            "/api/quan-ly/hoa-don",              // Qu·∫£n l√Ω h√≥a ƒë∆°n
            "/view-trang-thai-don-hang"         // Qu·∫£n l√Ω kh√°ch h√†ng
    );

    // C√°c ƒë∆∞·ªùng d·∫´n kh√¥ng c·∫ßn login (trang public)
    private static final List<String> PUBLIC_PATHS = Arrays.asList(
            "/home"
    );

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
        String uri = request.getRequestURI();
        System.out.println("üîç Interceptor ki·ªÉm tra URI: " + uri);

        // ‚úÖ N·∫øu l√† trang public ‚Üí Cho qua lu√¥n
        for (String publicPath : PUBLIC_PATHS) {
            if (uri.startsWith(publicPath)) {
                System.out.println("‚úÖ Trang c√¥ng khai, cho ph√©p truy c·∫≠p: " + uri);
                return true;
            }
        }

        HttpSession session = request.getSession(false);

        // ‚ùå N·∫øu ch∆∞a login
        if (session == null || session.getAttribute("userRole") == null) {
            System.out.println("‚ùå Ch∆∞a ƒëƒÉng nh·∫≠p, chuy·ªÉn h∆∞·ªõng t·ªõi /login");
            response.sendRedirect("/login");
            return false;
        }

        String role = (String) session.getAttribute("userRole");

        // ‚úÖ N·∫øu l√† ADMIN ‚Üí Cho ph√©p t·∫•t c·∫£
        if ("ADMIN".equals(role)) {
            System.out.println("‚úÖ ADMIN truy c·∫≠p, cho ph√©p: " + uri);
            return true;
        }

        // ‚úÖ N·∫øu l√† EMPLOYEE ‚Üí Ki·ªÉm tra quy·ªÅn truy c·∫≠p
        if ("EMPLOYEE".equals(role)) {
            for (String allowedPath : EMPLOYEE_ALLOWED_PATHS) {
                if (uri.startsWith(allowedPath)) {
                    System.out.println("‚úÖ EMPLOYEE ƒë∆∞·ª£c ph√©p truy c·∫≠p: " + uri);
                    return true;
                }
            }

            // ‚ùå Kh√¥ng c√≥ quy·ªÅn
            System.out.println("‚õî EMPLOYEE kh√¥ng c√≥ quy·ªÅn truy c·∫≠p: " + uri);
            response.sendRedirect("/error/unauthorized");
            return false;
        }

        // ‚ùå Vai tr√≤ kh√¥ng x√°c ƒë·ªãnh
        System.out.println("‚õî Vai tr√≤ kh√¥ng h·ª£p l·ªá: " + role);
        response.sendRedirect("/login");
        return false;
    }
}
